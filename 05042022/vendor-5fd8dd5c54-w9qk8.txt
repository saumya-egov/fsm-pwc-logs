Name:         vendor-5fd8dd5c54-w9qk8
Namespace:    egov
Priority:     0
Node:         sujogk8wrk01.osdc.gov.in/10.150.231.4
Start Time:   Thu, 31 Mar 2022 09:35:46 +0530
Labels:       app=vendor
              group=rainmaker
              pod-template-hash=5fd8dd5c54
Annotations:  <none>
Status:       Running
IP:           10.42.3.34
IPs:
  IP:           10.42.3.34
Controlled By:  ReplicaSet/vendor-5fd8dd5c54
Init Containers:
  vendor-db-migration:
    Container ID:   containerd://0006d0b86c3e8624553d2d15c0423eb57c5f9395d908712e30f51d34ed5fb9d2
    Image:          egovio/vendor-db:2.3-patch-odisha-f35f282d2-3
    Image ID:       docker.io/egovio/vendor-db@sha256:e7c70b19a8a40f39267eb6479e7e426f72ee5ff43900b0b23bbedbb4c9dace14
    Port:           <none>
    Host Port:      <none>
    State:          Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Thu, 31 Mar 2022 09:35:50 +0530
      Finished:     Thu, 31 Mar 2022 09:35:51 +0530
    Ready:          True
    Restart Count:  0
    Environment:
      DB_URL:            <set to the key 'db-url' of config map 'egov-config'>  Optional: false
      SCHEMA_TABLE:      land_services_schema
      FLYWAY_USER:       <set to the key 'flyway-username' in secret 'db'>                Optional: false
      FLYWAY_PASSWORD:   <set to the key 'flyway-password' in secret 'db'>                Optional: false
      FLYWAY_LOCATIONS:  <set to the key 'flyway-locations' of config map 'egov-config'>  Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-zppr5 (ro)
Containers:
  vendor:
    Container ID:   containerd://001841db0c0abda6be5587abfcac32bf43f2f3388e7f2cd732b9decf65c861c3
    Image:          egovio/vendor:2.3-patch-odisha-f35f282d2-3
    Image ID:       docker.io/egovio/vendor@sha256:f02011975017f1ccf6b8b63d9c344dd12c2f5fc82750f0ad94bc8c3c4aa72906
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Thu, 31 Mar 2022 09:35:55 +0530
    Ready:          True
    Restart Count:  0
    Limits:
      memory:  384Mi
    Requests:
      memory:   384Mi
    Liveness:   http-get http://:8080/vendor/actuator/health delay=120s timeout=3s period=60s #success=1 #failure=5
    Readiness:  http-get http://:8080/vendor/actuator/health delay=90s timeout=3s period=30s #success=1 #failure=5
    Environment:
      SPRING_DATASOURCE_URL:                     <set to the key 'db-url' of config map 'egov-config'>  Optional: false
      SPRING_DATASOURCE_USERNAME:                <set to the key 'username' in secret 'db'>             Optional: false
      SPRING_DATASOURCE_PASSWORD:                <set to the key 'password' in secret 'db'>             Optional: false
      SERVER_TOMCAT_MAX_THREADS:                 10
      SERVER_TOMCAT_MAX_CONNECTIONS:             500
      SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE:       3
      SPRING_DATASOURCE_TOMCAT_MAX_IDLE:         2
      SPRING_DATASOURCE_TOMCAT_MIN_IDLE:         1
      SPRING_FLYWAY_ENABLED:                     false
      EGOV_COLLECTION_SERVICE_HOST:              http://collection-services:8080/
      EGOV_MDMS_HOST:                            http://egov-mdms-service:8080/
      EGOV_USER_HOST:                            http://egov-user:8080/
      EGOV_LOCATION_HOST:                        http://egov-location:8080/
      EGOV_VEHICLE_HOST:                         http://vehicle.egov:8080/
      EGOV_HRMS_HOST:                            http://egov-hrms:8080/
      EGOV_LOCALIZATION_HOST:                    http://egov-localization:8080/
      TRACER_ERRORS_PROVIDEEXCEPTIONINDETAILS:   true
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:  org.egov.tracer.kafka.deserializer.HashMapDeserializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:    org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_GROUP_ID:            egov-vendor-services
      PERSISTER_SAVE_VENDOR_TOPIC:               save-vendor-application
      PERSISTER_UPDATE_VENDOR_TOPIC:             update-vendor-application
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:      org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:    org.springframework.kafka.support.serializer.JsonSerializer
      JAVA_ENABLE_DEBUG:                         true
      SPRING_KAFKA_BOOTSTRAP_SERVERS:            <set to the key 'kafka-brokers' of config map 'egov-config'>  Optional: false
      APP_TIMEZONE:                              <set to the key 'timezone' of config map 'egov-config'>       Optional: false
      JAVA_OPTS:                                 -Xmx192m -Xms192m
      JAVA_ARGS:                                 -Dspring.profiles.active=monitoring
      SPRING_JPA_SHOW_SQL:                       true
      SERVER_PORT:                               8080
      JAEGER_SERVICE_NAME:                       vendor
      JAEGER_SAMPLER_TYPE:                       remote
      JAEGER_AGENT_HOST:                          (v1:status.hostIP)
      JAEGER_AGENT_PORT:                         6831
      JAEGER_SAMPLER_MANAGER_HOST_PORT:          $(JAEGER_AGENT_HOST):5778
      SECURITY_BASIC_ENABLED:                    false
      MANAGEMENT_SECURITY_ENABLED:               false
      NOTIFICATION_SMS_ENABLED:                  
      EGOV_USER_EVENT_NOTIFICATION_ENABLED:      true
      EGOV_UI_APP_HOST:                          https://sujog.odisha.gov.in/
      EGOV_USR_EVENTS_CREATE_TOPIC:              persist-user-events-async
      EGOV_USR_EVENTS_PAY_LINK:                  citizen/otpLogin?mobileNo=$mobile&redirectTo=egov-common/pay?consumerCode=$applicationNo&tenantId=$tenantId&businessService=$businessService
      EGOV_USR_EVENTS_PAY_CODE:                  PAY
      TRACER_OPENTRACING_ENABLED:                true
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-zppr5 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  default-token-zppr5:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-zppr5
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:          <none>
